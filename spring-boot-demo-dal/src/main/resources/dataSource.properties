#DB
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/demo
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name = com.mysql.jdbc.Driver

#连接池初始连接数
spring.datasource.druid.initial-size=3
#允许的最大同时使用中(在被业务线程持有，还没有归还给druid) 的连接数
spring.datasource.druid.max-active=20
#允许的最小空闲连接数，空闲连接超时踢除过程会最少保留的连接数
spring.datasource.druid.min-idle=3
#从连接池获取连接的最大等待时间 5 秒
spring.datasource.druid.max-wait=5000
#一条物理连接的最大存活时间 30分钟
spring.datasource.druid.phy-timeout-millis=1800000
#强行关闭从连接池获取而长时间未归还给druid的连接(认为异常连接
spring.datasource.druid.remove-abandoned=true
#异常连接判断条件，超过180 秒 则认为是异常的，需要强行关闭
spring.datasource.druid.remove-abandoned-timeout=180
#从连接池获取到连接后，如果超过被空闲剔除周期，是否做一次连接有效性检查
spring.datasource.druid.test-while-idle=true
#从连接池获取连接后，是否马上执行一次检查
spring.datasource.druid.test-on-borrow=false
#归还连接到连接池时是否马上做一次检查
spring.datasource.druid.test-on-return=false
#连接有效性检查的SQL
spring.datasource.druid.validation-query="SELECT 1"
#连接有效性检查的超时时间 1 秒
spring.datasource.druid.validation-query-timeout=1
#周期性剔除长时间呆在池子里未被使用的空闲连接, 10秒一次
spring.datasource.druid.time-between-eviction-runs-millis=10000
#空闲多久可以认为是空闲太长而需要剔除 30 秒
spring.datasource.druid.min-evictable-idle-time-millis=30000
#如果空闲时间太长即使连接池所剩连接 < minIdle 也要被剔除 5 分钟
spring.datasource.druid.max-evictable-idle-time-millis=300000
#是否设置自动提交，相当于每个语句一个事务
spring.datasource.druid.default-auto-commit=true
#网络读取超时，网络连接超时
spring.datasource.druid.connect-properties="connectTimeout=1000;socketTimeout=3000"
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.useGlobalDataSourceStat=true


#jpa
spring.jpa.database=MYSQL
spring.jpa.show-sql= true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
